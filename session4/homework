- We use function to clearly separate the code and easily check the errors in long code.
- How to define/declare a function:
  + let functionname=(//parameters)=>{//some coding}
  + function functionname(){}

- Call/use function:
   functionname() //function invocation
   
- return statements cease execution in a function and return a value to the caller
  How to:

- No. But every function will return something (including undefined)

- Function parameters are the names listed in the function definition.

  Function arguments are the real values passed to (and received by) the function.
  
- <script type="text/javascript" src="function.js"></script>
  window.onload=()=>{//code}
  call: result=function()

1. HELLO WORLD

const helloworld=()=>{
    for(i=0;i<3;i++) {
        text("Hello World")
        penup()
        fd(40)
        pendown()
    }
}
helloworld()
clear()

2. SUM
const sum=(x,y)=>{
text(x+y)
}

sum(3,4)

3. DRAW SQUARE 

const drawSquare=(length,color1)=>{
    for(i=0;i<4;i++){
        color(color1)
        fd(length)
        rt(90)
    }
    }
    drawSquare(100,"red")
    clear()
    
4. T.Anh painting is a spiral of s

5. DRAWSTAR 
    rt(18)
    const drawStar=(length)=>{
        for(i=0;i<5;i++){
            fd(length)
            rt(144)
        }
    }
    drawStar(100)
    clear()

6. REMOVE $ SIGN
const remove_dollar_sign=(s)=>{
    for(i=0;i<s.length;i++){
    s = s.replace('$','')
    }
    return s
}  
test=remove_dollar_sign("ádjaodjoajd$$$$$$$$$áda$")
console.log(test)

7. It is good
string_with_no_dollars = remove_dollar_sign("$80% percent of $life is to show $up")
if (string_with_no_dollars == "80% percent of life is to show up"){
    console.log("Your function is correct")}
else{
    console.log("Oops, there's a bug")}

8. EVEN LIST
const get_even_list=(l)=>{
for(i=0;i< l.length;i++){
    if(l[i]%2==0){}
    else{l.splice(i,1)
    i=i-1}
}
return l
}

9. Something wrong :(((
even_list = get_even_list([1, 2, 5, 9, -10, 6])
console.log(even_list)
if (even_list == [2, -10, 6]){
    console.log("Your function is correct")};

10. IS INSIDE
is_inside=([X,Y],[x,y,w,h])=>{
    result=0
    if(x+w>=X && X>=x){
        if(y+h>=Y && Y>=y){
            result="True"
        }
        else{result="False"}

    }
    else{result="False"}
    return result
}

11. test= is_inside([100, 120], [140, 60,100,200])
console.log(test)

 
